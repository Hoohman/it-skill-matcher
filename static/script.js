// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function () {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ localStorage
    const savedSource = localStorage.getItem('vacancySource');
    if (savedSource) {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        document.querySelector(`input[name="vacancy_source"][value="${savedSource}"]`).checked = true;

        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
        const event = new Event('change');
        document.querySelector(`input[name="vacancy_source"][value="${savedSource}"]`).dispatchEvent(event);
    }
});

// –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É —Ñ–∞–π–ª–æ–º –∏ —Ä—É—á–Ω—ã–º –≤–≤–æ–¥–æ–º
document.querySelectorAll('input[name="vacancy_source"]').forEach(radio => {
    radio.addEventListener('change', function () {
        document.getElementById('vacancy-file-block').style.display =
            this.value === 'file' ? 'block' : 'none';
        document.getElementById('vacancy-manual-block').style.display =
            this.value === 'manual' ? 'block' : 'none';

        // –î–µ–ª–∞–µ–º –ø–æ–ª–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏ —Ä—É—á–Ω–æ–º –≤–≤–æ–¥–µ
        document.getElementById('vacancy').required = this.value === 'file';

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ localStorage
        localStorage.setItem('vacancySource', this.value);
    });
});

document.getElementById('upload-form').addEventListener('submit', async function (event) {
    event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

    const vacancySource = document.querySelector('input[name="vacancy_source"]:checked').value;
    const resumeFile = document.getElementById('resume').files[0];
    const vacancyFile = document.getElementById('vacancy').files[0];
    const errorElement = document.getElementById('error');
    const resultsElement = document.getElementById('results');
    const selectedSkills = Array.from(document.querySelectorAll('.skill-tag'))
        .map(tag => tag.dataset.skill);
    const criticalSkills = Array.from(document.querySelectorAll('#critical-skills .skill-tag'))
        .map(tag => tag.dataset.skill);
    const importantSkills = Array.from(document.querySelectorAll('#important-skills .skill-tag'))
        .map(tag => tag.dataset.skill);
    const optionalSkills = Array.from(document.querySelectorAll('#optional-skills .skill-tag'))
        .map(tag => tag.dataset.skill);

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ—à–∏–±–∫–∏
    errorElement.style.display = 'none';
    resultsElement.style.display = 'none';

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ
    if (!resumeFile) {
        errorElement.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Ä–µ–∑—é–º–µ.';
        errorElement.style.display = 'block';
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–∫–∞–Ω—Å–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞
    if (vacancySource === 'file' && !vacancyFile) {
        errorElement.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –Ω–∞–≤—ã–∫–æ–≤.';
        errorElement.style.display = 'block';
        return;
    }

    if (vacancySource === 'manual' && selectedSkills.length === 0) {
        errorElement.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –Ω–∞–≤—ã–∫.';
        errorElement.style.display = 'block';
        return;
    }

    // –°–æ–∑–¥–∞—ë–º FormData
    const formData = new FormData();
    formData.append('resume', resumeFile);
    formData.append('vacancy_source', vacancySource);
    
    if (document.querySelector('input[name="vacancy_source"]:checked').value === 'manual') {
        formData.append('critical_skills', JSON.stringify(criticalSkills));
        formData.append('important_skills', JSON.stringify(importantSkills));
        formData.append('optional_skills', JSON.stringify(optionalSkills));
    } else if (document.getElementById('vacancy').files[0]) {
        formData.append('vacancy', document.getElementById('vacancy').files[0]);
    }

    try {
        const response = await fetch('/upload', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();

        if (response.ok) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è
            document.getElementById('name').textContent = `${data.name}`;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
            document.getElementById('contact-email').textContent = data.contacts.email;
            document.getElementById('contact-phone').textContent = data.contacts.phone;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º
            const priorityResults = `
            <div class="priority-results">
                <h4>üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏:</h4>
                <p>–°–æ–≤–ø–∞–ª–æ: ${data.skills_by_priority.critical.matched.join(', ') || '–Ω–µ—Ç'}</p>
                <p>–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: ${data.skills_by_priority.critical.missing.join(', ') || '–Ω–µ—Ç'}</p>
                
                <h4>üü° –ñ–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</h4>
                <p>–°–æ–≤–ø–∞–ª–æ: ${data.skills_by_priority.important.matched.join(', ') || '–Ω–µ—Ç'}</p>
                <p>–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: ${data.skills_by_priority.important.missing.join(', ') || '–Ω–µ—Ç'}</p>
                
                <h4>üü¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</h4>
                <p>–°–æ–≤–ø–∞–ª–æ: ${data.skills_by_priority.optional.matched.join(', ') || '–Ω–µ—Ç'}</p>
                <p>–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: ${data.skills_by_priority.optional.missing.join(', ') || '–Ω–µ—Ç'}</p>
            </div>
        `;

        document.getElementById('priority-results').innerHTML = priorityResults;
        document.getElementById('matched-skills').textContent = data.matched.length
            ? data.matched.join(', ')
            : '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            document.getElementById('matched-skills').textContent = data.matched.length
                ? data.matched.join(', ')
                : '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';
            document.getElementById('missing-skills').textContent = data.missing.length
                ? data.missing.join(', ')
                : '–ù–µ—Ç –ø—Ä–æ–±–µ–ª–æ–≤';
            document.getElementById('match-percent').innerHTML = `<strong>${data.match_percent}%</strong> —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏`;

            // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ä–æ–ª–∏
            const roleResults = document.getElementById('role-results');
            roleResults.innerHTML = '';
            for (const [role, info] of Object.entries(data.role_results)) {
                const roleDiv = document.createElement('div');
                roleDiv.className = 'role';
                roleDiv.innerHTML = `
                    <h4>${role} ‚Äî ${info.match_percent}% —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è</h4>
                    <p>–°–æ–≤–ø–∞–¥–∞—é—â–∏–µ –Ω–∞–≤—ã–∫–∏: ${info.matched_skills.length ? info.matched_skills.join(', ') : '‚Äî'}</p>
                `;
                roleResults.appendChild(roleDiv);
            }

            resultsElement.style.display = 'block';
            document.getElementById('download-btn').style.display = 'block';
            window.currentResults = data.role_results;
            window.currentMatchedSkills = data.matched;
            window.currentMissingSkills = data.missing;

            document.getElementById('resume-preview').textContent = data.resume_text;
            document.getElementById('toggle-preview').style.display = 'block';
            document.getElementById('resume-preview').style.display = 'none';

        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            errorElement.textContent = data.error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–æ–≤.';
            errorElement.style.display = 'block';
        }
    } catch (err) {
        if (err instanceof TypeError && err.message.includes("413")) {
            errorElement.textContent = '–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 5 –ú–ë';
        } else {
            errorElement.textContent = '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.';
        }
        errorElement.style.display = 'block';
    }
});

document.getElementById('download-btn').addEventListener('click', async function () {
    const data = {
        name: document.getElementById('name').textContent,
        contacts: {
            email: document.getElementById('contact-email').textContent,
            phone: document.getElementById('contact-phone').textContent
        },
        match_percent: parseFloat(document.getElementById('match-percent').textContent),
        matched: window.currentMatchedSkills,
        missing: window.currentMissingSkills,
        role_results: window.currentResults
    };

    const response = await fetch('/download-report', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
    });

    const blob = await response.blob();
    const link = document.createElement('a');
    link.href = window.URL.createObjectURL(blob);
    link.download = `–û—Ç—á–µ—Ç_${data.name}.docx`;
    link.click();
});

document.getElementById('toggle-preview').addEventListener('click', function () {
    const preview = document.getElementById('resume-preview');
    if (preview.style.display === 'none') {
        preview.style.display = 'block';
        this.textContent = 'üìñ –°–∫—Ä—ã—Ç—å —Ä–µ–∑—é–º–µ';
    } else {
        preview.style.display = 'none';
        this.textContent = 'üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—é–º–µ';
    }
});